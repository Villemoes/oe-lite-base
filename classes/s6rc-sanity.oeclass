CLASS_FLAGS += "s6rc_sanity"
IMAGE_PREPROCESS_FUNCS:>USE_s6rc_sanity = " image_preprocess_s6rc_sanity"
CLASS_DEPENDS:>USE_s6rc_sanity = " native:s6-rc"

image_preprocess_s6rc_sanity() {
	test -d ./etc/rc || return 0
	local ret=0
	tmpd=$(mktemp -d)
	cp -r ./etc/rc $tmpd/static

	# We assume that each executable file in etc/rc.hooks creates
	# a service or bundle by the same name. Some of the statically
	# defined services in etc/rc may depend on some of these, so
	# create a dummy longrun service to satisfy such services.
	mkdir -p $tmpd/dynamic
	if [ -d ./etc/rc.hooks ] ; then
		for f in $(find ./etc/rc.hooks -maxdepth 1 -type f -executable) ; do
			b=$(basename $f)
			d=$tmpd/dynamic/$b
			mkdir -p $d
			echo longrun > $d/type
			touch $d/run
			chmod +x $d/run

			# Also need to handle cases where a statically defined
			# service is declared as a producer or consumer for a
			# dynamically created service
			for pf in $tmpd/static/*/producer-for ; do
				test -f $pf || continue
				if grep -q "^$b$" $pf ; then
					producer=$(basename $(dirname $pf))
					echo "$producer" >> $d/consumer-for
				fi
			done
			for cf in $tmpd/static/*/consumer-for ; do
				test -f $cf || continue
				if grep -q "^$b$" $cf ; then
					consumer=$(basename $(dirname $cf))
					echo "$consumer" >> $d/producer-for
				fi
			done
		done
	fi

	s6-rc-compile -v 2 $tmpd/compiled $tmpd/static $tmpd/dynamic && \
	s6-rc-db -c $tmpd/compiled check || ret=1
	rm -rf $tmpd
	return $ret
}
